{"version":3,"sources":["../src/build.js"],"names":[],"mappings":";;;;;;6BAE0B,eAAe;;;;oBACxB,MAAM;;;;AAEvB,IAAM,YAAY,GAAG,kBAAK,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;;AAEhD,OAAO,CAAC,GAAG,4BAA0B,YAAY,CAAG,CAAC;;AAErD,IAAM,WAAW,uBACd,kBAAK,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,EAAG,kBAAK,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CACjE,CAAC;;;AAGF,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;AACzC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,UAAS,SAAS,EAAE;AACrD,SAAO,CAAC,GAAG,eAAa,SAAS,CAAG,CAAC;AACrC,MAAM,EAAE,GAAG,2BAAc,SAAS,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;;AAE7D,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;AACpC,MAAI,MAAM,EAAE;AACV,UAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;GACzB;;AAED,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;AACpC,MAAI,MAAM,EAAE;AACV,WAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;GACrB;CACF,CAAC,CAAC;;;AAGH,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;AACxD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,UAAA,SAAS,EAAI;AAC5C,MAAM,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;;AAEzC,MAAM,KAAK,GAAG,2BAAc,KAAK,CAC/B,kBAAK,IAAI,CAAC,YAAY,EAAE,cAAc,EAAE,MAAM,EAAE,OAAO,CAAC,EACxD,CAAC,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,eAAe,EAAE,SAAS,CAAC,CAChE,CAAC;;AAEF,OAAK,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AACrC,WAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;GAC5B,CAAC,CAAC;;AAEH,OAAK,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AACrC,WAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;GAC5B,CAAC,CAAC;CACJ,CAAC,CAAC","file":"build.js","sourcesContent":["\n\nimport child_process from 'child_process';\nimport path from 'path';\n\nconst PROJECT_ROOT = path.join(__dirname, '..');\n\nconsole.log(`Building project from ${PROJECT_ROOT}`);\n\nconst SOURCE_DIRS = {\n  [path.join(PROJECT_ROOT, 'src')]: path.join(PROJECT_ROOT, 'lib')\n};\n\n// Remove the previously built versions\nconsole.log('\\nRemoving directories...');\nObject.values(SOURCE_DIRS).forEach(function(outputDir) {\n  console.log(`Removing ${outputDir}`);\n  const rm = child_process.spawnSync('rm', ['-rf', outputDir]);\n\n  const stderr = rm.stderr.toString();\n  if (stderr) {\n    throw new Error(stderr);\n  }\n\n  const stdout = rm.stdout.toString();\n  if (stdout) {\n    console.log(stdout);\n  }\n});\n\n// Rebuild from the source files\nconsole.log('\\nRebuilding and watching directories...');\nObject.keys(SOURCE_DIRS).forEach(sourceDir => {\n  const outputDir = SOURCE_DIRS[sourceDir];\n\n  const babel = child_process.spawn(\n    path.join(PROJECT_ROOT, 'node_modules', '.bin', 'babel'),\n    [sourceDir, '--out-dir', outputDir, '--source-maps', '--watch']\n  );\n\n  babel.stderr.on('data', function(data) {\n    process.stderr.write(data);\n  });\n\n  babel.stdout.on('data', function(data) {\n    process.stdout.write(data);\n  });\n});"]}